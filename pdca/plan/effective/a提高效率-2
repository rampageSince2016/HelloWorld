影响效率有哪几个方面：
1. coding思路较窄
2. bug找不到
3. 业务不熟

解决方法：
1. 总结对实际已经编码过的问题， 反复练习，强化思路;
	多看别人的代码，对别人好的coding思路进行反复练习，强化思路
2. 全面使用单元测试， 并使用5w1h的方式设计测试用例
3. 重视业务，在业务上只要有不明白的地方都要设法弄清

执行：
	1. 每天对项目中的遇到的一个实际问题进行重编码
	2. 使用一次单元测试
	3. 重写一段业务逻辑伪码或重写一次业务口径
	4. Ext单个简单ui复习
	5. 检查生产系统
	6. 复习python常用数据结构[break]
	7. 机器学习复习
	8. 英语单词复习
	9. NoSql复习
	10. python treeLib 源码学习

每日任务:
	6月15：
	1. Ext新ui控件学习
		状态：[done TreePanel]
	2. 新业务口径推敲与记录[M_step_marked]
		状态：正在写每个标是怎么算的
		new: 还差M_step_status没做
		new: [done]
	6月16：
	1. Ext新ui控件学习
		状态: 学习Login表单的制作， 已经学到textfield
	2. 新业务口径推敲与记录 
		状态：[done]
	3. vim插件学习
		状态: 大部分都装好了，但pyflakes没能指定python解析器
		[done]

	6月17:
	1. 营业厅渠道的数据在pbc里是用intf几来记录的? 还有电渠[ break]
	2. bpc重新发包 [break]

	6月21:
	1. 检查营业厅监测平台无数据bug [not start]
	6月22:
	1. 检查营业厅监测平台无数据bug [done 增加了无数据log, 定时查看下log是否有nosql]
	2. 阅读需求说明书
		状态：
			(1) 文档测试遇到问题
				(1) 文档过大，设计起来很吃力(尝试只做一小点)
				(2) 情绪问题
				(3) 没进入状态(先做一些简单一点的事，让大脑进入状态, 写这个文档应该就是最简单的事了吧)
				
	6月23：
		1. 概要说明书
			状态:刚开始
			遇到问题: 划分感觉不对
			解决方法: 先做，不管对错，速度出第一版
			遇到问题: 静不下心来，心好乱

检查：
6/12: [sms_alarm告警短信函数coding] [1 done]
6/13: [1 done(Ext chart grid using with store exploring and heating)]
6/14: [4 done]
6/15: [4 done double] 
6/16: [4 done][3 done][1 done][2 done][5 done]
6/17: 
6/20: [1 doing][2 doing]
6/21: [1 done][2 done][4 done][5 done]
6/22: [5 done]
6/27: [5 done]
6/28: [5 done][4 done][6][8][2][1]
6/29: [5][8][4]
6/30: [8][5][4][1][2][9]
7/1: [8][5]

7/5: [8][5]

总结：
	每天要做的事的计划应该减少难度，确保2点：1.简单易做， 2.动手重做
	过程比结果重要： 写这个表比工作还重要
	每天的工作只一有件事： 就是写这个表
	找标准代码还真难
调整：
	原执行：
	1. 每天至少对一个已经遇到并已解决的问题重新进行编码; 每天至少学习一个别人coding的好思路
	2. 对以上coding的地方都要进行5w1h的提问和测试用例的设计
	3. 周一至周五，每天至少在业务口径库里记一条自己不知道的业务口径或用伪码写一段业务逻辑
	调整为：
	1. 每天对项目中的遇到的一个实际问题进行重编码
	2. 使用一次单元测试
	3. 重写一段业务逻辑伪码或重写一次业务口径
