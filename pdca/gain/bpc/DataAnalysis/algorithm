kNN算法
	1. 数据清洗： 把数据整理成table模式（目前的数据直接都是csv格式的)
	2. 数据标准化(解决各列数据在不同数量级的问题, 数据级差别大，大数据级的数据会主导结果)
	3. 输入数据标准化(标准化的过程使用到的数据与上一步的相同)
	4. 计算输入数据与所有样本数据的距离
	5. 对第4步的数据进行倒序排序, 取出前k位
	6. 对以上结果进行频数统计， 取出频数最大的一个label值, 即分为这个类别

ID3算法(用来做决策树, 无数值型数据)
	1. 输入csv
	2. 先计算基础信息熵
	3. 对每个特征值进行分组: 对于特征列的每一个值进行分组抽取, 然后算出分组后信息熵 = sum(每一个分组的信息熵×这个分组的占比)
	4. 如果分组的的信息熵 <  基础信息熵，则说明这个分组没有信息量上的增加， 所以分组是合理的; 否则分组增加了其他信息量， 分组不合理 
	5. 递归对数据进行分组，返回一个树结构的字典, 至此分类算法已经形成
	6. 输入要分类的数据， 按决策树各结点的逻辑进行判断即可知这个数据属于什么类别

	ID3算法的缺点很明显如overfitting(过度匹配)， 很多场景都不适用， 决策树的生成有更好的算法
